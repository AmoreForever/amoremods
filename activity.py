# ‚†ø‚†ø‚†ø‚†ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†ü‚†õ‚†õ‚†õ‚†õ‚†õ
# ‚£∂‚£¶‚£§‚£§‚£§‚£§‚£§‚£§‚£¨‚£≠‚£≠‚£ç‚£â‚°ô‚†õ‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚£ã‚£©‚£≠‚£•‚£§‚£¥‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂
# ‚£Ü‚†Ä‚†Ä‚†Ä‚¢°‚†Å‚†Ä‚°Ä‚†Ä‚¢∏‚†ü‚†ª‚£Ø‚†ô‚†õ‚†∑‚£∂‚£¨‚°ô‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢â‚£•‚£∂‚°ü‚†ª‚£ô‚°â‚†Ä‚¢∞‚°Ü‚†Ä‚†Ä‚£°‚†Ä‚£ß‚†Ä‚†Ä‚†Ä‚¢®‚£ø
# ‚†ª‚£¶‚†Ä‚†Ä‚†à‚£á‚£Ä‚£ß‚£¥‚£ø‚£∂‚£∂‚£ø‚£∑‚†Ä‚¢Ä‚°á‚†â‚†ª‚¢∂‚£å‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£°‚°∂‚†ü‚†â‚†Ä‚¢£‚†Ä‚£ø‚†∑‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°∑‚¢Ä‚†á‚†Ä‚†Ä‚¢†‚£ø‚£ø
# ‚£¶‚°à‚¢ß‚°Ä‚†Ä‚†ò‚¢Æ‚°ô‚†õ‚†â‚†Ä‚†Ñ‚†ô‚¢ø‚£Ä‚†û‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚£Ñ‚†â‚†ì‚†í‚†ö‚†ã‚¢Ä‚°†‚†ã‚†Ä‚¢Ä‚£¥‚£è‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£õ‚£¶‚£Ä‚†Ä‚†ô‚†ì‚†¶‚†§‚£§‚†î‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£§‚£§‚£§‚£§‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚¢ô‚¢ì‚£í‚°í‚†ö‚†ã‚¢†‚£§‚¢∂‚£ü‚£Ω‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚†Ä‚†Ä‚£¥‚£ø‚£∑‚£∂‚£∂‚£∂‚£æ‚°ñ‚¢∞‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£æ‚£ø‚£ø‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø

#                          üîí Licensed under the GNU GPLv3
#                    üåê https://www.gnu.org/licenses/agpl-3.0.html
# ¬†¬†¬†¬†¬†¬†¬†¬†                   https://t.me/amorescam
#
# meta developer: @amoremods
# meta banner: https://raw.githubusercontent.com/AmoreForever/assets/master/Activity.jpg
# requires: deep_translator

import requests
import deep_translator
from .. import loader, utils


def generate_activity():
    return requests.get("http://api.farkhodovme.tk/activity/en").json()['activity']


class Activity(loader.Module):
    """Generate activity if you're bored"""

    strings = {"name": "Activity", "activity": "‚õ© <b>Activity:</b> <code>{}</code>", "lang": "en"}
    strings_ru = {"activity": "‚õ© <b>–ó–∞–Ω—è—Ç–∏–µ:</b> <code>{}</code>", "lang": "ru"}
    strings_uz = {"activity": "‚õ© <b>Harakat:</b> <code>{}</code>", "lang": "uz"}

    @loader.command(ru_doc="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ", uz_doc="Harakat yaratish")
    async def activity(self, message):
        """Generate activity"""
        res = (deep_translator.GoogleTranslator(source="auto", target=self.strings["lang"]).translate(generate_activity()) if self.strings["lang"] != "en" else generate_activity())
        txt = self.strings['activity'].format(res)
        await utils.answer(message, txt)